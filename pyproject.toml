[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nagios-plugins-lukas"
version = "1.0.0"
description = "Custom Nagios plugins for monitoring various devices"
authors = [
    {name = "SVA System Vertrieb Alexander GmbH", email = "michael.hoess@sva.de"}
]
readme = "README.md"
license = {text = "GPL-3.0-or-later"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Networking :: Monitoring",
]

dependencies = [
    # Core HTTP and networking
    "requests>=2.25.0",
    "urllib3>=1.26.0",
    
    # System monitoring
    "psutil>=5.8.0",
    
    # Cryptography for TP-Link P110 encryption
    "pycryptodome>=3.15.0",
    "pkcs7>=0.1.2",
    
    # SNMP monitoring for printer/network devices
    "pysnmp>=4.4.12",
    
    # Data validation and parsing
    "pydantic>=1.10.0",
    "pyyaml>=5.4.0",
    
    # CMK/CheckMK related (optional, for CMK integration)
    # These would be available in CheckMK environment
    # "cmk-agent-based>=2.0.0",
    # "cmk-rulesets>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]

checkmk = [
    # CheckMK/CMK specific dependencies for agent integration
    # These would be installed in CheckMK environment
]

[project.urls]
Homepage = "https://github.com/ckbaker10/nagios-plugins"
Repository = "https://github.com/ckbaker10/nagios-plugins"
Issues = "https://github.com/ckbaker10/nagios-plugins/issues"

[project.scripts]
check_gmodem2 = "nagios_plugins.check_gmodem2:main"
check_p110 = "nagios_plugins.check_p110:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["nagios_plugins*"]

[tool.setuptools.package-data]
"*" = ["*.py"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["nagios_plugins"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["nagios_plugins"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]